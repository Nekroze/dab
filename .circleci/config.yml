version: 2.1

notify:
  webhooks:
    - url: 'https://webhooks.gitter.im/e/cc6aefa009b39156b845'

workflows:
  version: 2

  'Static Analysis':
    jobs:
      - 'Danger Automated Code Review'
      - 'Shfmt'
      - 'Shellcheck'
      - 'GolangCI-Lint'

  'Test Suite':
    jobs:
      - 'Feature Testing'
      - 'UX Regression Testing'
      - 'Execution Profile'

  'Periodic Stable Branch Updates':
    jobs:
      - 'Request Stable Branch Update'

    triggers:
      - schedule:
          cron: "0 0 * * 1,3"
          filters:
            branches:
              only:
                - master

jobs:

  Shellcheck:
    docker:
      - image: koalaman/shellcheck-alpine:stable
    steps:
      - checkout

      - run:
          name: check
          command: ./scripts/shellcheck.sh

  Shfmt:
    docker:
      - image: golang:1.12
    steps:
      - checkout

      - run:
          name: install
          command: go get mvdan.cc/sh/cmd/shfmt

      - run:
          name: check
          command: shfmt -d -ln=posix -s .

  GolangCI-Lint:
    docker:
      - image: golang:1.12
    steps:
      - checkout

      - run:
          name: install
          command: |
              curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | bash -s -- -b $GOPATH/bin v1.15.0

      - run:
          name: get deps
          command: go mod download
          environment:
            GO111MODULE: 'on'

      - run:
          name: check
          command: |
              ./scripts/compgen.sh
              cd completion && golangci-lint run --deadline 4m --enable-all --disable dupl,lll,gochecknoglobals,gochecknoinits


  'Danger Automated Code Review':
    docker:
      - image: circleci/node:latest
    steps:
      - checkout

      - run:
          name: danger
          command: ./scripts/danger.sh


  'Feature Testing':
    machine: true
    steps:

      - checkout

      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose

      - run:
          name: Build Image
          command: ./scripts/build.sh

      - run:
          name: Smoke Tests
          command: script -qec './scripts/test.sh'
          environment:
            TEST_DOCKER: local
            TEST_TAGS: '@smoke and not @profiling'

      - store_test_results:
          path: /tmp/dab/test_results
      - run:
          name: Clear test results
          when: on_fail
          command: rm -rf /tmp/dab/test_results || true

      - run:
          name: Acceptance Tests
          command: script -qec './scripts/test.sh'
          environment:
            TEST_DOCKER: local
            TEST_TAGS: '@ci and not @smoke'

      - store_test_results:
          path: /tmp/dab/test_results
      - run:
          name: Clear test results
          when: on_fail
          command: rm -rf /tmp/dab/test_results || true

  'UX Regression Testing':
    machine: true
    steps:

      - checkout

      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose

      - run:
          name: UX Regression Tests
          command: |
              ./scripts/build.sh
              script -qec './scripts/ux-test.sh'

      - store_test_results:
          path: /tmp/dab/test_results
      - run:
          name: Clear test results
          when: on_fail
          command: rm -rf /tmp/dabux/test_results || true

  'Execution Profile':
    machine: true
    steps:

      - checkout

      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose


      - run:
          name: Profile
          command: |
              ./scripts/build.sh
              docker images
              script -qec './scripts/test.sh'
          environment:
            TEST_DOCKER: local
            TEST_TAGS: '@profiling'

      - store_test_results:
          path: /tmp/dab/test_results

  'Request Stable Branch Update':
    machine: true
    steps:

      - checkout

      - run:
          name: request
          command: ./scripts/request-stable-update.sh
