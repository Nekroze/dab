#!/bin/sh
# Description: Clone a known repo (or list of them) by name
# Usage: <REPO_NAME>...
# vim: ft=sh ts=4 sw=4 sts=4 noet
set -eu

[ -n "${1:-}" ] || fatality 'must provide at least one repo name paramater'

for repo in "$@"; do
	url="$(config_get "repo/$repo/url")"
	[ -n "$url" ] || fatality "url for repo $repo is unknown"

	newclone=false
	if [ ! -d "$DAB_REPO_PATH/$repo" ]; then
		newclone=true
		git clone --recursive "$url" "$DAB_REPO_PATH/$repo"
	fi

	[ -d "$DAB_REPO_PATH/$repo" ] || git clone --recursive "$url" "$DAB_REPO_PATH/$repo"
	cd "$DAB_REPO_PATH/$repo"

	if [ -d "$DAB_CONF_PATH/repo/$repo/remotes/" ]; then
		# shellcheck disable=SC2044
		for remkey in $(find "$DAB_CONF_PATH/repo/$repo/remotes/" -type f -maxdepth 1); do
			[ ! -d "$remkey" ] || continue
			remname="$(basename "$remkey")"
			remurl="$(config_get "repo/$repo/remotes/$remname")"
			if git remote | grep -qE "^$remname$"; then
				if [ "$(git remote get-url "$remname")" != "$remurl" ]; then
					inform "configuring $repo remote $remname url from $(git remote get-url "$remname") to $remurl"
					git remote set-url "$remname" "$remurl"
				fi
			else
				inform "configuring $repo remote $remname to $remurl"
				git remote add "$remname" "$remurl"
			fi
		done
	fi

	if [ "${newclone:-false}" = 'true' ]; then
		tip=$(config_get "repo/$repo/tip" "${DAB_DEFAULT_REMOTE:-origin}/master")
		[ "$tip" = 'origin/master' ] || git checkout "$tip"
	fi
done
